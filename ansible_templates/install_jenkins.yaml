---
- hosts: "{{ passed_in_hosts }}"
  become: yes
  remote_user: ec2-user
  become_user: root
  tasks:
    - name: install dependencies
      yum:
        name: "{{ package }} "
        state: present
      vars:
        package:
        - wget
        - git
        - python-pip
        - yum-utils
        - device-mapper-persistent-data
        - lvm2
        - amazon-linux-extras

    - name: Add extras repository
      shell: yum-config-manager --enable extras

    - name: Enable Some packages from amazon-linux-extras packages
      shell: "amazon-linux-extras enable python3.8 ansible2 docker"
    - name: Install Java 11 
      shell: "amazon-linux-extras install java-openjdk11 -y"


    - name: clean yum metadata cache
      command: yum clean metadata
      args:
        warn: false

    - name: Ensure a list of yum packages are installed
      yum:
        name: "{{ packages }}"
        state: latest
        update_cache: yes
      vars:
        packages:
        - python3.8
        - ansible
        - docker

    - name: Enable Docker CE service at startup
      service:
        name: docker
        state: started
        enabled: yes

    - name: Upgrade pip3
      shell: "python3.8 -m pip install pip --upgrade"

    - name: Ensure Python pip packages are installed
      pip:
        name: "{{ packages }}"
        executable: /usr/local/bin/pip3.8
      vars:
        packages:
        - boto
        - boto3
        - docker-compose
      
    - name: clone repo
      git:
        repo: https://github.com/linuxacademy/content-terraform-jenkins.git
        dest: /tmp/jenkins

    - name: Setup Jenkins Repo
      get_url:
        url: https://pkg.jenkins.io/redhat/jenkins.repo
        dest: /etc/yum.repos.d/jenkins.repo
    
    - name: Import Jenkins Repo GPG key
      rpm_key:
        state: present
        key: https://pkg.jenkins.io/redhat/jenkins.io.key
 
    - name: upgrade all packages
      yum: 
        name: '*' 
        state: latest

    - name: install Jenkins
      yum:
        name: jenkins
        state: present
        update_cache: yes

    - name: Temporarily Stop Jenkins
      service: 
        name: jenkins 
        state: stopped
   
    - name: Modify user shell
      user:
        name: jenkins
        shell: /bin/bash
    
    
    - name: Delete Jenkins default dir
      file:
        state: absent
        path: /var/lib/jenkins
    
    - name: Copy over cloned Jenkins /var/lib/jenkins
      copy:
        remote_src: yes
        src: /tmp/jenkins/jenkins
        dest: /var/lib
        
         
    - name: Restore jenkins user ownership on /var/lib/jenkins
      file:
        path: /var/lib/jenkins
        state: directory
        recurse: yes
        owner: jenkins

    - name: Start Jenkins
      service:
        name: jenkins
        state: started
        enabled: yes
      register: myserviceDetails
      until: myserviceDetails.status.ActiveState == "active"
      retries: 15
      delay: 20
